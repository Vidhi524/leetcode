class Solution {
public:
    int firstOccurence(vector<int>& nums, int target){
        int start=0;
        int end=nums.size()-1;
        int mid=start+(end-start)/2;
        int ans=-1;
        while(start<=end){
            if(target==nums[mid]){
                ans=mid;
                end=mid-1;
            }
            else if(target<nums[mid]){
                end=mid-1;
            }
            else if(target>nums[mid]){
                start=mid+1;
            }
            mid=start+(end-start)/2;
        }
        return ans;
    }
    int lastOccurence(vector<int>& nums, int target){
        int start=0;
        int ans=-1;
        int end=nums.size()-1;
        int mid=start+(end-start)/2;
        while(start<=end){
            if(target==nums[mid]){
                ans=mid;
                start=mid+1;
            }
            else if(target<nums[mid]){
                end=mid-1;
            }
            else if(target>nums[mid]){
                start=mid+1;
            }
            mid=start+(end-start)/2;
        }
        return ans;
    }
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> res(2,0);
        int first=firstOccurence(nums,target);
        int last=lastOccurence(nums,target);
        res[0]=first;
        res[1]=last;
        return res;
    }
};
